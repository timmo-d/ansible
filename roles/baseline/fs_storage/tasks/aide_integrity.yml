# vars (e.g., group_vars/all.yml)
# aide_gzip_db: false  # set true to use .gz database files

- name: Install AIDE
  ansible.builtin.package:
    name: aide
    state: present
  when: enable_aide | default(true)

- name: Ensure /var/lib/aide exists
  ansible.builtin.file:
    path: /var/lib/aide
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: enable_aide | default(true)

# Normalize config: dedupe, set gzip_dbout, and align filenames
- name: Remove any existing database/database_out lines
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    regexp: '^\s*(database|database_out)\s*=.*$'
    state: absent
  when: enable_aide | default(true)

- name: Ensure gzip_dbout is set explicitly
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    regexp: '^\s*gzip_dbout\s*='
    line: "gzip_dbout={{ 'yes' if aide_gzip_db | default(false) else 'no' }}"
    create: yes
    state: present
  when: enable_aide | default(true)

- name: Compute AIDE database filenames based on compression
  ansible.builtin.set_fact:
    aide_db_file: "/var/lib/aide/aide.db{{ '.gz' if aide_gzip_db | default(false) else '' }}"
    aide_db_new_file: "/var/lib/aide/aide.db.new{{ '.gz' if aide_gzip_db | default(false) else '' }}"
  when: enable_aide | default(true)

- name: Ensure AIDE database path is set
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    line: "database=file:{{ aide_db_file }}"
    create: true
    state: present
  when: enable_aide | default(true)

- name: Ensure AIDE database_out path is set
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    line: "database_out=file:{{ aide_db_new_file }}"
    create: true
    state: present
  when: enable_aide | default(true)

# Your existing rules (kept)
- name: Protect audit tools with AIDE rules
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    line: "{{ item }} p+i+n+u+g+s+b+acl+xattrs+sha512"
    state: present
  loop:
    - /usr/sbin/auditctl
    - /usr/sbin/auditd
    - /usr/sbin/augenrules
    - /usr/sbin/aureport
    - /usr/sbin/ausearch
    - /usr/sbin/autrace
  when: enable_aide | default(true)

# Initialize (idempotent; uses correct creates: path)
- name: Initialize AIDE database (time consuming on first run)
  ansible.builtin.command: /usr/sbin/aideinit -y -f
  args:
    creates: "{{ aide_db_file }}"
  register: aide_init
  changed_when: aide_init.rc == 0
  failed_when: aide_init.rc not in [0, 1]
  when: enable_aide | default(true)

# Reporting settings (fixed regex)
- name: Ensure AIDE sends non-silent reports
  ansible.builtin.lineinfile:
    path: /etc/default/aide
    create: true
    regexp: '(?i)^\s*SILENTREPORTS='
    line: 'SILENTREPORTS=no'
    state: present
  when: enable_aide | default(true)

- name: Enable daily AIDE check (systemd timer)
  ansible.builtin.systemd:
    name: dailyaidecheck.timer
    state: started
    enabled: true
    masked: false
    daemon_reload: true
  when: enable_aide | default(true)