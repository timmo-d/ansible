# vars (group_vars/all.yml)
# aide_gzip_db: false   # set to true if you want .gz databases

# Ensure directory and aligned config (you already have these, shown for completeness)
- name: Ensure /var/lib/aide exists
  ansible.builtin.file:
    path: /var/lib/aide
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: enable_aide | default(true)

- name: Ensure gzip_dbout is set explicitly
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    regexp: '^\s*gzip_dbout\s*='
    line: "gzip_dbout={{ 'yes' if aide_gzip_db | default(false) else 'no' }}"
    create: true
  when: enable_aide | default(true)

- name: Compute AIDE database filenames
  ansible.builtin.set_fact:
    aide_db_file: "/var/lib/aide/aide.db{{ '.gz' if aide_gzip_db | default(false) else '' }}"
    aide_db_new_file: "/var/lib/aide/aide.db.new{{ '.gz' if aide_gzip_db | default(false) else '' }}"
  when: enable_aide | default(true)

- name: Ensure AIDE database path is set
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    regexp: '^\s*database\s*='
    line: "database=file:{{ aide_db_file }}"
    create: true
  when: enable_aide | default(true)

- name: Ensure AIDE database_out path is set
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    regexp: '^\s*database_out\s*='
    line: "database_out=file:{{ aide_db_new_file }}"
    create: true
  when: enable_aide | default(true)

# ---------- BYPASS THE WRAPPER: run 'aide --init' directly ----------
- name: Initialize AIDE (direct)
  ansible.builtin.command: /usr/sbin/aide --init
  args:
    # Skip if the final DB already exists (idempotent)
    creates: "{{ aide_db_file }}"
  register: aide_init
  changed_when: aide_init.rc == 0
  failed_when: aide_init.rc != 0
  when: enable_aide | default(true)

# Optional: show where AIDE says it wrote the DB (helps diagnose)
- name: Show AIDE init message
  ansible.builtin.debug:
    msg: "{{ aide_init.stderr | default(aide_init.stdout) }}"
  when:
    - enable_aide | default(true)
    - aide_init is defined

# Move the newly created DB into place (what aideinit would have done)
- name: Promote new AIDE DB into place
  ansible.builtin.command: "mv -f {{ aide_db_new_file }} {{ aide_db_file }}"
  args:
    removes: "{{ aide_db_new_file }}"
    creates: "{{ aide_db_file }}"
  register: aide_mv
  changed_when: aide_mv.rc == 0
  failed_when: aide_mv.rc != 0
  when:
    - enable_aide | default(true)
    - aide_init is defined
    - aide_init.rc == 0

# (Optional) Verify final DB exists
- name: Verify final AIDE DB present
  ansible.builtin.stat:
    path: "{{ aide_db_file }}"
  register: aide_db_stat
  when: enable_aide | default(true)

- name: Fail if AIDE DB missing after init
  ansible.builtin.fail:
    msg: "AIDE DB {{ aide_db_file }} was not created."
  when:
    - enable_aide | default(true)
    - aide_db_stat.stat.exists is not defined or not aide_db_stat.stat.exists