# ---- Ensure AIDE package is present (with privilege escalation) ----
- name: Install AIDE
  become: yes
  ansible.builtin.package:
    name: aide
    state: present
  when: enable_aide | default(true)

# ---- Ensure target dir exists ----
- name: Ensure /var/lib/aide exists
  become: yes
  ansible.builtin.file:
    path: /var/lib/aide
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: enable_aide | default(true)

# ---- Explicitly set gzip_dbout and align filenames ----
# Toggle this in group_vars/all.yml  (aide_gzip_db: true|false)
- name: Remove any existing database/database_out lines
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    regexp: '^\s*(database|database_out)\s*=.*$'
    state: absent
  when: enable_aide | default(true)

- name: Ensure gzip_dbout is set explicitly
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    regexp: '^\s*gzip_dbout\s*='
    line: "gzip_dbout={{ 'yes' if aide_gzip_db | default(false) else 'no' }}"
    create: yes
    state: present
  when: enable_aide | default(true)

- name: Compute AIDE database filenames based on compression
  ansible.builtin.set_fact:
    aide_db_file: "/var/lib/aide/aide.db{{ '.gz' if aide_gzip_db | default(false) else '' }}"
    aide_db_new_file: "/var/lib/aide/aide.db.new{{ '.gz' if aide_gzip_db | default(false) else '' }}"
  when: enable_aide | default(true)

- name: Ensure AIDE database path is set
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    line: "database=file:{{ aide_db_file }}"
    create: true
    state: present
  when: enable_aide | default(true)

- name: Ensure AIDE database_out path is set
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/aide/aide.conf
    line: "database_out=file:{{ aide_db_new_file }}"
    create: true
    state: present
  when: enable_aide | default(true)

# ---- Discover binary paths safely (don’t hardcode /usr/sbin/aide) ----
- name: Find aide binary
  ansible.builtin.command: bash -lc 'command -v aide || true'
  register: aide_bin
  changed_when: false
  failed_when: false
  when: enable_aide | default(true)

- name: Find aideinit wrapper
  ansible.builtin.command: bash -lc 'command -v aideinit || true'
  register: aideinit_bin
  changed_when: false
  failed_when: false
  when: enable_aide | default(true)

# ---- Fail fast if neither binary is present (shouldn’t happen after install) ----
- name: Assert an AIDE executable exists
  ansible.builtin.assert:
    that:
      - "(aide_bin.stdout | length) > 0 or (aideinit_bin.stdout | length) > 0"
    fail_msg: "AIDE is not available on PATH even after installation."
  when: enable_aide | default(true)

# ---- Initialize database (prefer direct aide --init; fallback to aideinit) ----
# Direct aide --init (idempotent via 'creates')
- name: Initialize AIDE (direct, if available)
  become: yes
  ansible.builtin.command: "{{ aide_bin.stdout }} --init"
  args:
    creates: "{{ aide_db_file }}"
  register: aide_init_direct
  changed_when: aide_init_direct.rc == 0
  failed_when: aide_init_direct.rc != 0
  when:
    - enable_aide | default(true)
    - (aide_bin.stdout | length) > 0

# Fallback to aideinit wrapper if 'aide' wasn’t found
- name: Initialize AIDE (wrapper fallback)
  become: yes
  ansible.builtin.command: "{{ aideinit_bin.stdout }} -y -f"
  args:
    creates: "{{ aide_db_file }}"
  register: aide_init_wrapper
  changed_when: aide_init_wrapper.rc == 0
  failed_when: aide_init_wrapper.rc not in [0, 1]
  when:
    - enable_aide | default(true)
    - (aide_bin.stdout | length) == 0
    - (aideinit_bin.stdout | length) > 0

# ---- If we used direct aide --init, promote the .new file into place ----
- name: Promote new AIDE DB into place (direct-init path only)
  become: yes
  ansible.builtin.command: "mv -f {{ aide_db_new_file }} {{ aide_db_file }}"
  args:
    removes: "{{ aide_db_new_file }}"
    creates: "{{ aide_db_file }}"
  register: aide_mv
  changed_when: aide_mv.rc == 0
  failed_when: aide_mv.rc != 0
  when:
    - enable_aide | default(true)
    - (aide_bin.stdout | length) > 0
    - aide_init_direct is defined
    - aide_init_direct.rc == 0

# ---- Reporting preferences (fixed regex) ----
- name: Ensure AIDE sends non-silent reports
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/default/aide
    create: true
    regexp: '(?i)^\s*SILENTREPORTS='
    line: 'SILENTREPORTS=no'
    state: present
  when: enable_aide | default(true)

# ---- Daily timer ----
- name: Enable daily AIDE check (systemd timer)
  become: yes
  ansible.builtin.systemd:
    name: dailyaidecheck.timer
    state: started
    enabled: true
    masked: false
    daemon_reload: true
  when: enable_aide | default(true)
``