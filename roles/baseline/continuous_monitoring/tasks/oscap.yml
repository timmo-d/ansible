
---
- name: Ensure Universe repo is enabled (OpenSCAP + SSG live here)
  become: true
  ansible.builtin.command: add-apt-repository -y universe
  register: add_universe_scap
  changed_when: add_universe_scap.rc == 0 and ('universe' in (add_universe_scap.stdout | lower))
  failed_when: false
  when: enable_oscap | default(true)
  tags: ['scap']

- name: Update apt cache
  become: true
  ansible.builtin.apt:
    update_cache: yes
  when: enable_oscap | default(true)
  tags: ['scap']

- name: Install OpenSCAP scanner (oscap)
  become: true
  ansible.builtin.apt:
    name: openscap-scanner
    state: present
  when: enable_oscap | default(true)
  tags: ['scap']

- name: Install SCAP Security Guide content packages (ssg-*)
  become: true
  ansible.builtin.apt:
    name:
      - ssg-base
      - ssg-debderived
      - ssg-debian
      - ssg-nondebian
      - ssg-applications
    state: present
  failed_when: false
  when: enable_oscap | default(true)
  tags: ['scap']

- name: Try to install 'scap-security-guide' umbrella package (best-effort)
  become: true
  ansible.builtin.apt:
    name: scap-security-guide
    state: present
  failed_when: false
  when: enable_oscap | default(true)
  tags: ['scap']

- name: Use provided datastream if set
  ansible.builtin.set_fact:
    ssg_ds_file: "{{ oscap_datastream }}"
  when:
    - enable_oscap | default(true)
    - oscap_datastream | default('') | length > 0
  tags: ['scap']

- name: Discover a SCAP DataStream (Ubuntu preferred, then Debian, then any)
  ansible.builtin.shell: |
    set -o pipefail
    for f in       /usr/share/xml/scap/ssg/content/ssg-ubuntu*-ds*.xml       /usr/share/xml/scap/ssg/content/ssg-debian*-ds*.xml       /usr/share/xml/scap/ssg/content/*-ds*.xml; do
      [ -f "$f" ] && { echo "$f"; break; }
    done
  args: { executable: /bin/bash }
  register: ssg_ds_search
  when:
    - enable_oscap | default(true)
    - (oscap_datastream | default('')) | length == 0
  changed_when: false
  failed_when: false
  tags: ['scap']

- name: Set discovered datastream path
  ansible.builtin.set_fact:
    ssg_ds_file: "{{ ssg_ds_search.stdout | trim }}"
  when:
    - enable_oscap | default(true)
    - (oscap_datastream | default('')) | length == 0
    - ssg_ds_search.stdout | length > 0
  tags: ['scap']

- name: Skip SCAP evaluation if no datastream found
  ansible.builtin.debug:
    msg: "No SCAP DataStream found under /usr/share/xml/scap/ssg/content; skipping OpenSCAP."
  when:
    - enable_oscap | default(true)
    - ssg_ds_file is not defined or ssg_ds_file | length == 0
  tags: ['scap']

- name: Evaluate with OpenSCAP
  become: true
  ansible.builtin.command: >
    oscap xccdf eval
    --results {{ oscap_results_path | default('/var/tmp/openscap-results.xml') }}
    --profile {{ oscap_profile }}
    {{ ssg_ds_file }}
  register: oscap_eval
  changed_when: false
  failed_when: false
  when:
    - enable_oscap | default(true)
    - ssg_ds_file is defined and ssg_ds_file | length > 0
  tags: ['scap']

- name: Save OpenSCAP summary
  become: true
  ansible.builtin.copy:
    dest: "{{ oscap_summary_path | default('/var/tmp/openscap-summary.txt') }}"
    content: "{{ oscap_eval.stdout | default('') }}"
  when:
    - enable_oscap | default(true)
    - ssg_ds_file is defined and ssg_ds_file | length > 0
  tags: ['scap']
