---
- name: Ensure libpam-pwquality is installed
  ansible.builtin.package:
    name: libpam-pwquality
    state: present
  tags: [auth]

- name: Configure pwquality
  ansible.builtin.template:
    src: pwquality.conf.j2
    dest: /etc/security/pwquality.conf
    owner: root
    group: root
    mode: "0644"
  tags: [auth]

- name: Configure faillock
  ansible.builtin.template:
    src: faillock.conf.j2
    dest: /etc/security/faillock.conf
    owner: root
    group: root
    mode: "0644"
  tags: [auth]

- name: Ensure pam_faildelay (4s) in common-auth
  ansible.builtin.lineinfile:
    path: /etc/pam.d/common-auth
    regexp: '^auth\s+required\s+pam_faildelay\.so'
    line: "auth    required    pam_faildelay.so delay={{ pam_fail_delay_microseconds }}"
    insertbefore: '^auth'
    state: present
  tags: [auth]

- name: Ensure pam_faillock in common-auth (preauth)
  ansible.builtin.lineinfile:
    path: /etc/pam.d/common-auth
    regexp: '^auth\s+required\s+pam_faillock\.so.*preauth'
    line: 'auth required pam_faillock.so preauth'
    insertafter: '^auth'
    state: present
  tags: [auth]

- name: Ensure pam_faillock in common-auth (authfail)
  ansible.builtin.lineinfile:
    path: /etc/pam.d/common-auth
    regexp: '^auth\s+\[default=die\]\s+pam_faillock\.so.*authfail'
    line: 'auth    [default=die] pam_faillock.so authfail'
    insertafter: '^auth'
    state: present
  tags: [auth]

#- name: Ensure pam_faillock in common-account
#  ansible.builtin.lineinfile:
#    path: /etc/pam.d/common-account
#    regexp: '^account\s+required\s+pam_faillock\.so'
#    line: 'account required pam_faillock.so'
#    insertafter: '^account'
#    state: present
#  tags: [auth]

- name: Ensure pam_pwquality in common-password
  ansible.builtin.lineinfile:
    path: /etc/pam.d/common-password
    regexp: '^password\s+requisite\s+pam_pwquality\.so'
    line: 'password requisite pam_pwquality.so retry=3'
    insertafter: '^password'
    state: present
  tags: [auth]

- name: Ensure SHA512 & rounds in common-password
  ansible.builtin.lineinfile:
    path: /etc/pam.d/common-password
    regexp: '^password\s+\[success=1 default=ignore\]\s+pam_unix\.so.*$'
    line: 'password [success=1 default=ignore] pam_unix.so obscure sha512 rounds=100000'
  tags: [auth]

- name: Remove any nullok from PAM configs
  ansible.builtin.replace:
    path: "{{ item }}"
    regexp: '\snullok(\s|$)'
    replace: ' '
  loop:
    - /etc/pam.d/common-auth
    - /etc/pam.d/common-password
  tags: [auth]

- name: Set PASS_MIN_DAYS
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^PASS_MIN_DAYS'
    line: 'PASS_MIN_DAYS   {{ pass_min_days }}'
  tags: [auth]

- name: Set PASS_MAX_DAYS
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^PASS_MAX_DAYS'
    line: 'PASS_MAX_DAYS   {{ pass_max_days }}'
  tags: [auth]

- name: Lock root account (disable direct login)
  ansible.builtin.user:
    name: root
    password_lock: true
  when: lock_root_account
  tags: [auth]

- name: Install SSSD for MFA (optional)
  ansible.builtin.package:
    name: [sssd, libpam-sss, libnss-sss]
    state: present
  when: enable_sssd_mfa
  tags: [auth, mfa]
