- name: Set Kodi variables
  set_fact:
    kodi_user: kodi
    kodi_group: media
    kodi_home: "/home/kodi"
    kodi_flatpak_id: "tv.kodi.Kodi"
    flathub_remote_name: "flathub"
    flathub_repo_url: "https://flathub.org/repo/flathub.flatpakrepo"

- name: Ensure required packages are installed
  apt:
    name:
      - flatpak
      - xinit
      - xvfb
      - x11-utils
      - x11-xserver-utils
      - xserver-xorg
    state: present
    update_cache: true

- name: Ensure Kodi user exists
  user:
    name: "{{ kodi_user }}"
    shell: /bin/bash
    create_home: yes
    group: "{{ kodi_group }}"
    state: present

- name: Ensure Kodi home directory exists
  file:
    path: "{{ kodi_home }}"
    state: directory
    owner: "{{ kodi_user }}"
    group: "{{ kodi_group }}"
    mode: '0755'

- name: Ensure Flathub remote is configured
  community.general.flatpak_remote:
    name: "{{ flathub_remote_name }}"
    state: present
    flatpakrepo_url: "{{ flathub_repo_url }}"
    method: system

- name: Install or update Kodi from Flathub
  community.general.flatpak:
    name: "{{ kodi_flatpak_id }}"
    state: present
    method: system
    remote: "{{ flathub_remote_name }}"

- name: Add kodi user to required groups
  user:
    name: "{{ kodi_user }}"
    groups: audio,video,input,dialout,plugdev,tty
    append: yes

- name: Replace allowed_users=console with allowed_users=anybody
  replace:
    path: /etc/X11/Xwrapper.config
    regexp: '^allowed_users=console'
    replace: 'allowed_users=anybody'

- name: Ensure 'needs_root_rights=yes' is present in Xwrapper.config
  lineinfile:
    path: /etc/X11/Xwrapper.config
    line: 'needs_root_rights=yes'
    state: present
    create: yes
    insertafter: EOF

- name: Copy power menu policy for Ubuntu 24.04 and above
  copy:
    src: kodi.powermenu_in_2404.rules.j2
    dest: /etc/polkit-1/rules.d/powermenu.rules
    mode: '0644'

- name: Ensure Kodi userdata directory exists
  file:
    path: "{{ kodi_home }}/.var/app/{{ kodi_flatpak_id }}/data/userdata/"
    state: directory
    owner: "{{ kodi_user }}"
    group: "{{ kodi_group }}"
    mode: '0755'

- name: Restore Kodi configuration files from templates
  template:
    src: "kodi.{{ item }}.j2"
    dest: "{{ kodi_home }}/.var/app/{{ kodi_flatpak_id }}/data/userdata/{{ item }}"
    owner: "{{ kodi_user }}"
    group: "{{ kodi_group }}"
    mode: '0644'
  loop:
    - advancedsettings.xml
    - mediasources.xml
    - sources.xml
    - profiles.xml
    - guisettings.xml

- name: Create .bash_profile to boot into Kodi on tty1
  copy:
    dest: "{{ kodi_home }}/.bash_profile"
    content: |
      #!/bin/bash

      # Start Kodi in a virtual X session on tty1
      if [ -z "$DISPLAY" ] && [ "$(tty)" = "/dev/tty1" ]; then
          exec xinit /usr/bin/flatpak run tv.kodi.Kodi -- :0 -nolisten tcp vt7
      fi
    owner: "{{ kodi_user }}"
    group: "{{ kodi_group }}"
    mode: '0644'

- name: Create systemd override directory for getty@tty1
  file:
    path: /etc/systemd/system/getty@tty1.service.d
    state: directory
    mode: '0755'

- name: Configure autologin for Kodi user on tty1
  copy:
    dest: /etc/systemd/system/getty@tty1.service.d/override.conf
    content: |
      [Service]
      ExecStart=
      ExecStart=-/sbin/agetty --autologin {{ kodi_user }} --noclear %I $TERM
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Restart getty@tty1 service
  systemd:
    name: getty@tty1
    state: restarted