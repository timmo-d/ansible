############################################
# Install required packages (from apt and flatpak)
############################################
# Install dependencies
- name: Install dependencies
  apt:
    name:
      - xinit
      - xorg
      - dbus-x11
      - xserver-xorg-video-intel
      - xserver-xorg-legacy
      - pulseaudio
      - upower
      - rsync
    state: present
    update_cache: yes
    install_recommends: no

# Install Kodi (headless)
- name: Ensure Flatpak engine is installed
  ansible.builtin.package:
    name: flatpak
    state: present

- name: Ensure Flathub remote is configured (system)
  community.general.flatpak_remote:
    name: "{{ flathub_remote_name }}"
    state: present
    flatpakrepo_url: "{{ flathub_repo_url }}"
    method: system

- name: Install or update Kodi from Flathub (system)
  community.general.flatpak:
    name: "{{ kodi_flatpak_id }}"
    state: present
    method: system
    remote: "{{ flathub_remote_name }}"

- name: Create systemd service for Kodi headless
  template:
    src: kodi.service.j2
    dest: /etc/systemd/system/kodi.service
    mode: '0644'

############################################
# Enable Boot2Kodi (adapted from https://github.com/abacao/Boot2Kodi)
############################################
- name: Add user 'kodi' with disabled password and login
  ansible.builtin.user:
    name: kodi
    password: '!'          # disables password
    shell: /usr/sbin/nologin
    comment: ""
    create_home: yes
    state: present

- name: Add kodi user to required groups
  user:
    name: kodi
    groups: audio,video,input,dialout,plugdev,tty
    append: yes

- name: Replace allowed_users=console with allowed_users=anybody
  replace:
    path: /etc/X11/Xwrapper.config
    regexp: '^allowed_users=console'
    replace: 'allowed_users=anybody'

- name: Ensure 'needs_root_rights=yes' is present in Xwrapper.config
  lineinfile:
    path: /etc/X11/Xwrapper.config
    line: 'needs_root_rights=yes'
    state: present
    create: yes
    insertafter: EOF

- name: Copy powermenu_in_kodi.pkla for Ubuntu 22.04 and under
  copy:
    src: kodi.powermenu_in_kodi.pkla.j2
    dest: /etc/polkit-1/localauthority/50-local.d/powermenu_in_kodi.pkla
    mode: '0644'
  when: ansible_distribution_version is version('24.04', '<')

- name: Copy powermenu_in_2404.rules for Ubuntu 24.04 and above
  copy:
    src: kodi.powermenu_in_2404.rules.j2
    dest: /etc/polkit-1/rules.d/powermenu.rules
    mode: '0644'
  when: ansible_distribution_version is version('24.04', '>=')

############################################
# Restore config from backups
############################################
- name: Ensure destination directory exists
  ansible.builtin.file:
    path: /home/kodi/.var/app/tv.kodi.Kodi/data/userdata
    state: directory
    owner: kodi
    group: media
    mode: '0755'

# Run rsync ON the remote host so src and dest are remote paths
- name: Rsync Kodi userdata (idempotent, (*** takes ~5 min on first run ***))
  ansible.posix.synchronize:
    src: /mnt/data/servarr/kodi/userdata/            # note trailing slash = copy contents
    dest: /home/kodi/.var/app/tv.kodi.Kodi/data/userdata/
    archive: true                                    # -a : perms, times, recurse, etc.
    delete: false                                    # set true if you want a perfect mirror
    checksum: false                                  # default: size+mtime; set true for stricter checks
  delegate_to: "{{ inventory_hostname }}"

# Ensure ownership recursively (in case rsync preserved different owners)
- name: Ensure ownership of destination is kodi:kodi
  ansible.builtin.file:
    path: /home/kodi/.var/app/tv.kodi.Kodi/data/userdata
    owner: kodi
    group: media
    recurse: true

- name: Enable and start Kodi service
  systemd:
    name: kodi
    enabled: yes
    state: started
