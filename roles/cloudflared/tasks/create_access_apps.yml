# 0. Preconditions
- name: Fail if Cloudflare account ID or API token is missing
  fail:
    msg: "cloudflare_account_id or cloudflare_apps_api_token is not set â€” cannot manage Access apps"
  when:
    - cloudflare_account_id is not defined or cloudflare_account_id | length == 0
    - cloudflare_apps_api_token is not defined or cloudflare_apps_api_token | length == 0

# 1. Fetch all Access apps
- name: Get list of Access apps
  uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/access/apps"
    method: GET
    headers:
      Authorization: "Bearer {{ cloudflare_apps_api_token }}"
      Content-Type: "application/json"
    return_content: yes
    status_code: 200
  register: access_apps_resp

- name: Fail if API call to get Access apps failed
  fail:
    msg: "Failed to retrieve Access apps: {{ access_apps_resp.json.errors }}"
  when: not access_apps_resp.json.success | default(false)

- name: Set access_apps_list fact to just the result array
  set_fact:
    access_apps_list: "{{ access_apps_resp.json.result | default([]) }}"

- name: Debug discovered Access apps
  debug:
    var: access_apps_list

# 2. Create or update each Access app
- name: Create or update Cloudflare Access apps
  uri:
    url: >-
      https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/access/apps{{ '/' + (existing_app.id | default('')) if existing_app is defined else '' }}
    method: "{{ 'PUT' if existing_app is defined else 'POST' }}"
    headers:
      Authorization: "Bearer {{ cloudflare_apps_api_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      name: "{{ item.name }}"
      domain: "{{ item.domain }}"
      type: "self_hosted"
      session_duration: "1h"
    status_code: [200, 201]
    return_content: yes
  loop: "{{ cloudflare_access_apps }}"
  loop_control:
    label: "{{ item.name }}"
  vars:
    existing_app: "{{ access_apps_list | selectattr('domain', 'equalto', item.domain) | first | default(omit) }}"
  register: created_or_updated_apps

# 3. Build list of apps with IDs for downstream tasks
- name: Build created_apps fact
  set_fact:
    created_apps: "{{ created_apps | default([]) + [ {
        'name': item.item.name,
        'app_id': (item.json.result.id | default(item.json.result.uid))
      } ] }}"
  loop: "{{ created_or_updated_apps.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: Debug created_apps
  debug:
    var: created_apps
