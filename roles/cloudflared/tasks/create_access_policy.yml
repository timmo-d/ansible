# roles/cloudflared/tasks/create_or_update_policy.yml
# Expects vars: app_id, app_email

- name: Get existing policies for app {{ app_id }}
  uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/access/apps/{{ app_id }}/policies"
    method: GET
    headers:
      Authorization: "Bearer {{ cloudflare_api_token }}"
      Content-Type: "application/json"
    return_content: yes
    status_code: 200
  register: existing_policies_for_app

- name: Find matching policy ID
  set_fact:
    matching_policy_id: >-
      {{
        (existing_policies_for_app.json.result
         | selectattr('include', 'defined')
         | selectattr('include', '!=', None)
         | selectattr('include', 'selectattr', 'email', 'defined')
         | selectattr('include', 'selectattr', 'email', '!=', None)
         | selectattr('include', 'selectattr', 'email.email', 'equalto', app_email)
         | selectattr('require', 'defined')
         | selectattr('require', 'selectattr', 'service_auth', 'defined')
         | map(attribute='id') | list | first)
        | default('')
      }}

- name: Update existing policy if found
  uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/access/apps/{{ app_id }}/policies/{{ matching_policy_id }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ cloudflare_api_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      name: "Allow and Service Auth for {{ app_email }}"
      decision: "allow"
      include:
        - email:
            email: "{{ app_email }}"
      precedence: 1
      require:
        - service_auth: {}
    status_code: 200
    return_content: yes
  when: matching_policy_id | length > 0

- name: Create new policy if none found
  uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ cloudflare_account_id }}/access/apps/{{ app_id }}/policies"
    method: POST
    headers:
      Authorization: "Bearer {{ cloudflare_api_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      name: "Allow and Service Auth for {{ app_email }}"
      decision: "allow"
      include:
        - email:
            email: "{{ app_email }}"
      precedence: 1
      require:
        - service_auth: {}
    status_code: 200
    return_content: yes
  when: matching_policy_id | length == 0
