---
- name: Install and configure media automation stack
  hosts: localhost
  become: true
  vars:
    media_group: media
    servarr_apps:
      - radarr
      - sonarr
      - lidarr
      - readarr
      - whisparr
      - prowlarr
    other_apps:
      - qbittorrent
      - huntarr
      - kodi

  tasks:

  - name: Ensure 'media' group exists
    group:
      name: "{{ media_group }}"
      state: present

  - name: Create users for Servarr apps
    user:
      name: "{{ item }}"
      group: "{{ media_group }}"
      shell: /usr/sbin/nologin
      create_home: yes
    loop: "{{ servarr_apps }}"

  - name: Install dependencies
    apt:
      name:
        - curl
        - gnupg
        - ca-certificates
        - software-properties-common
      state: present
      update_cache: yes

  - name: Install Servarr apps using tinyoverflow role
    include_role:
      name: tinyoverflow.servarr
    vars:
      servarr_app: "{{ item }}"
      servarr_user: "{{ item }}"
      servarr_group: "{{ media_group }}"
    loop: "{{ servarr_apps }}"

  - name: Install qBittorrent-nox
    apt:
      name: qbittorrent-nox
      state: present

  - name: Create qBittorrent user
    user:
      name: qbittorrent
      group: "{{ media_group }}"
      shell: /usr/sbin/nologin
      create_home: yes

  - name: Create systemd service for qBittorrent
    copy:
      dest: /etc/systemd/system/qbittorrent.service
      content: |
        [Unit]
        Description=qBittorrent-nox service
        After=network.target

        [Service]
        User=qbittorrent
        Group=media
        ExecStart=/usr/bin/qbittorrent-nox
        Restart=on-failure

        [Install]
        WantedBy=multi-user.target

  - name: Enable and start qBittorrent service
    systemd:
      name: qbittorrent
      enabled: yes
      state: started

  - name: Create Huntarr user
    user:
      name: huntarr
      group: "{{ media_group }}"
      shell: /usr/sbin/nologin
      create_home: yes

  - name: Install Kodi
    apt:
      name: kodi
      state: present

  - name: Create Kodi user
    user:
      name: kodi
      group: "{{ media_group }}"
      shell: /usr/sbin/nologin
      create_home: yes

  - name: Create systemd service for Kodi headless
    copy:
      dest: /etc/systemd/system/kodi.service
      content: |
        [Unit]
        Description=Kodi Media Center
        After=network.target

        [Service]
        User=kodi
        Group=media
        ExecStart=/usr/bin/kodi --standalone
        Restart=on-failure

        [Install]
        WantedBy=multi-user.target

  - name: Enable and start Kodi service
    systemd:
      name: kodi
      enabled: yes
      state: started
